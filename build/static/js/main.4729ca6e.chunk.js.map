{"version":3,"sources":["components/FetchData.js","App.js","reportWebVitals.js","index.js"],"names":["FetchData","props","md","Remarkable","handleChange","bind","handleChange2","state","loading","response","cardsToShow","cardTextLength","e","this","setState","target","value","myFunction","fetch","json","data","dataArr","children","slice","className","type","id","onChange","defaultValue","map","item","index","title","selftext","substr","length","React","Component","App","name","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAKqBA,G,yDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,GAAK,IAAIC,IACd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,MAAQ,CACTC,SAAS,EACTC,SAAU,GACVC,YAAa,IACbC,eAAgB,KATN,E,yDAaLC,GACTC,KAAKC,SAAS,CAAEN,SAAS,EAAME,YAAaE,EAAEG,OAAOC,U,oCAG3CJ,GACVC,KAAKC,SAAS,CAAEH,eAAgBC,EAAEG,OAAOC,U,oJAIzCH,KAAKI,a,2PAILJ,KAAKI,a,mQAKO,uC,SACWC,MADX,wC,cACNT,E,gBACaA,EAASU,O,OAAtBC,E,OAGAC,EAAUD,EAAKA,KAAKE,SAE1BT,KAAKC,SAAS,CAAEL,SAAUY,EAAQE,MAAM,EAAEV,KAAKN,MAAMG,eACrDG,KAAKC,SAAS,CAACN,SAAS,I,sIAQlB,IAAD,OACL,OAAU,gCACM,sBAAKgB,UAAU,aAAf,UACI,2CACA,uBACIC,KAAK,SACLC,GAAG,mBACHC,SAAUd,KAAKT,aACfwB,aAAcf,KAAKN,MAAMG,cAE7B,4CACA,uBACIe,KAAK,SACLC,GAAG,mBACHC,SAAUd,KAAKP,cACfsB,aAAcf,KAAKN,MAAMI,iBAE7B,gCAASE,KAAKN,MAAMC,QAAU,aAAe,QAI7CK,KAAKN,MAAME,SAASoB,KAAK,SAACC,EAAMC,GAAP,OACzB,sBAAKP,UAAU,iBAAf,UACQ,qBAAKA,UAAU,QAAf,SAAwBM,EAAKV,KAAKY,QAClC,sBAAKR,UAAU,UAAf,UACI,cAAC,IAAD,UAAgBM,EAAKV,KAAKa,SAASC,OAAO,EAAE,EAAK3B,MAAMI,kBACrD,EAAKJ,MAAMI,eAAiBmB,EAAKV,KAAKa,SAASE,OAAS,MAAQ,mB,GA1EnEC,IAAMC,Y,iBCkB9BC,G,qLAfX,OAAO,sBAAKd,UAAU,MAAf,UACL,eAAC,IAAD,WACE,6DACA,sBAAMe,KAAK,WAAWC,QAAQ,2CAEhC,yBAAQhB,UAAU,aAAlB,UACE,0DACA,yGAEF,cAAC,EAAD,W,GAXYY,IAAMC,YCMTI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4729ca6e.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { Remarkable } from 'remarkable';\r\nimport './Cards.css';\r\n\r\nexport default class FetchData extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.md = new Remarkable();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChange2 = this.handleChange2.bind(this);\r\n        this.state = {\r\n            loading: true,\r\n            response: [],\r\n            cardsToShow: \"5\",\r\n            cardTextLength: 600\r\n        };\r\n    }\r\n\r\n    handleChange(e) {        \r\n        this.setState({ loading: true, cardsToShow: e.target.value });\r\n    } \r\n\r\n    handleChange2(e) {        \r\n        this.setState({ cardTextLength: e.target.value });\r\n    } \r\n\r\n    async componentDidMount(){\r\n        this.myFunction();        \r\n    }\r\n\r\n    async componentDidUpdate(){\r\n        this.myFunction();\r\n    }\r\n\r\n    async myFunction(){\r\n        // get data\r\n        const url = 'https://www.reddit.com/r/webdev.json';\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n\r\n        // set data\r\n        const dataArr = data.data.children;\r\n        //this.setState({ response: dataArr });\r\n        this.setState({ response: dataArr.slice(0,this.state.cardsToShow) });\r\n        this.setState({loading: false});\r\n\r\n        // log data\r\n        // console.log(JSON.stringify(this.state.response[0].data.title));\r\n        // console.log(JSON.stringify(this.state.response[2].data));        \r\n        // console.log(this.state.response.length);\r\n    }\r\n\r\n    render() {\r\n        return    <div>\r\n                        <div className=\"inputGroup\">                        \r\n                            <label>Cards:</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"markdown-content\"\r\n                                onChange={this.handleChange}\r\n                                defaultValue={this.state.cardsToShow}\r\n                            />  \r\n                            <label>Length:</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"markdown-content\"\r\n                                onChange={this.handleChange2}\r\n                                defaultValue={this.state.cardTextLength}\r\n                            />\r\n                            <label>{ this.state.loading ? 'Loading...' : ''}</label>\r\n                        </div>                                             \r\n\r\n                        {\r\n                            this.state.response.map(((item, index) => \r\n                            <div className='card-component'>         \r\n                                    <div className='title'>{item.data.title}</div>                    \r\n                                    <div className='message'> \r\n                                        <ReactMarkdown>{item.data.selftext.substr(0,this.state.cardTextLength)}</ReactMarkdown>\r\n                                        { this.state.cardTextLength < item.data.selftext.length ? '...' : ''}\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                  </div>;\r\n    }\r\n}","import React from 'react';\nimport FetchData from './components/FetchData';\nimport MetaTags from 'react-meta-tags';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {  \n    return <div className=\"App\">\n      <MetaTags>\n        <title>Reactive Reading App v.1</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\n      </MetaTags>\n      <header className=\"App-header\">        \n        <h1>Reactive Reading App v.1</h1>   \n        <p>✅Set cards amount ✅Set text length ✅No annoying images</p>     \n      </header> \n      <FetchData></FetchData> \n                \n    </div>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}